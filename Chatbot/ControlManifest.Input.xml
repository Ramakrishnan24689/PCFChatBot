<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="PCF.Chatbot" constructor="PCFChatbot" version="0.0.1" display-name-key="PCFChatbot" description-key="PCFChatbot description" control-type="standard">
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be true by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="true">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS-->
    <property name="Chatbot" display-name-key="Chatbot" description-key="embed" of-type="SingleLine.Text" usage="bound" required="true"/>
    <property name="chatbotURL" display-name-key="chatbotURL" default-value="https://powerva.microsoft.com/webchat/bots/935debfc-9961-4c0e-bafb-d633f852ec42"  description-key="embed" of-type="SingleLine.Text" usage="input" required="true"/>
    <property name="typeofSelection" display-name-key="Select Width" description-key="Select Person or Group" usage="input" of-type="Enum" required="true">
      <!--<value name="small" display-name-key="small" description-key="Type of selection - Small" default="true">Small</value>
      <value name="medium" display-name-key="medium" description-key="Type of selection - Medium">Medium</value>
      <value name="large" display-name-key="large" description-key="Type of selection - Large">Large</value>
      <value name="extralarge" display-name-key="extralarge" description-key="Type of selection - Extra Large">Extra Large</value>
      <value name="fullwidth" display-name-key="fullwidth" description-key="Type of selection - Full Width">Full Width</value>
      <value name="custom" display-name-key="custom" description-key="Type of selection -Custom">Custom</value>
      <value name="customnearside" display-name-key="customnearside" description-key="Type of selection -Custom Near Side">Custom, Near Side</value>-->
      <value name="Small" display-name-key="Small" description-key="Type of selection - Small">0</value>
      <value name="Small Fixed Far" display-name-key="Small Fixed Far" description-key="Type of selection - smallFixedFar">1</value>
      <value name="Small Fixed Near" display-name-key="Small Fixed Near" description-key="Type of selection - smallFixedNear">2</value>
      <value name="Medium" display-name-key="Medium" description-key="Type of selection - medium" default="true">3</value>
      <value name="Large" display-name-key="Large" description-key="Type of selection - large">4</value>
      <value name="Large Fixed" display-name-key="Large Fixed" description-key="Type of selection - largeFixed">5</value>
      <value name="Extra Large" display-name-key="Extra Large" description-key="Type of selection -extraLarge">6</value>
      <value name="Custom" display-name-key="Custom" description-key="Type of selection -Custom Near Side">7</value>
      <value name="Custom Near" display-name-key="Custom Near" description-key="Type of selection -Custom Near Side">8</value>
    </property>
    <property name="Widthinpx" display-name-key="width in px" description-key="Width in px" of-type="SingleLine.Text" usage="input" default-value="888"/>
    <!-- 
      Property node's of-type attribute can be of-type-group attribute. 
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/PCFChatbot.css" order="1" />
      <resx path="strings/PCFChatbot.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>